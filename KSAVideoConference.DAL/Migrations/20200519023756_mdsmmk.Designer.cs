// <auto-generated />
using System;
using KSAVideoConference.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KSAVideoConference.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200519023756_mdsmmk")]
    partial class mdsmmk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppStaticMessage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 29, DateTimeKind.Unspecified).AddTicks(5447),
                            CreatedBy = "seed@app.com",
                            Key = "Common",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 32, DateTimeKind.Unspecified).AddTicks(8428),
                            Value = "خطأ! الرجاء المحاوله مره اخري."
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(714),
                            CreatedBy = "seed@app.com",
                            Key = "DuplicateNumber",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(744),
                            Value = "رقم الجوال مسجل من قبل!"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(792),
                            CreatedBy = "seed@app.com",
                            Key = "InCompleteData",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(798),
                            Value = "يرجي التأكد من اتمام كل البيانات!"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(805),
                            CreatedBy = "seed@app.com",
                            Key = "JoinGroup",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(810),
                            Value = "يرجي الانضمام الى المجموعه!"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(817),
                            CreatedBy = "seed@app.com",
                            Key = "NotActiveGroup",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(822),
                            Value = "المجموعه غير نشطه!"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(828),
                            CreatedBy = "seed@app.com",
                            Key = "NotOwner",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(834),
                            Value = "ليس لديك الصلاحيه على التعديل!"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(840),
                            CreatedBy = "seed@app.com",
                            Key = "OwnerCantExit",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(845),
                            Value = "!لا يمكنك الخروج لأنك مدير المجموعه"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(851),
                            CreatedBy = "seed@app.com",
                            Key = "UnActive",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(857),
                            Value = "حسابك غير نشط!"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(863),
                            CreatedBy = "seed@app.com",
                            Key = "UnAuth",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 33, DateTimeKind.Unspecified).AddTicks(868),
                            Value = "لم يتم التعرف على حسابك!"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticMessageLang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Language")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Source")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Language");

                    b.HasIndex("Fk_Source");

                    b.ToTable("AppStaticMessageLang");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppStaticWord");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticWordLang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Language")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Source")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Language");

                    b.HasIndex("Fk_Source");

                    b.ToTable("AppStaticWordLang");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Creator")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxGroupCount")
                        .HasColumnType("int");

                    b.Property<int>("MaxStreamCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Creator");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.GroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Group")
                        .HasColumnType("int");

                    b.Property<int>("Fk_MemberType")
                        .HasColumnType("int");

                    b.Property<int>("Fk_User")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Group");

                    b.HasIndex("Fk_MemberType");

                    b.HasIndex("Fk_User");

                    b.ToTable("GroupMember");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.GroupMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Fk_Attachment")
                        .HasColumnType("int");

                    b.Property<int>("Fk_Group")
                        .HasColumnType("int");

                    b.Property<int>("Fk_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Attachment")
                        .IsUnique()
                        .HasFilter("[Fk_Attachment] IS NOT NULL");

                    b.HasIndex("Fk_Group");

                    b.HasIndex("Fk_User");

                    b.ToTable("GroupMessage");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Language")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Language");

                    b.ToTable("User");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.UserContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_Contact")
                        .HasColumnType("int");

                    b.Property<int>("Fk_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_Contact");

                    b.HasIndex("Fk_User");

                    b.ToTable("UserContact");
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.AccessLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7208),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7233),
                            Name = "FullAccess"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7879),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7899),
                            Name = "ControlAccess"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7922),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(7928),
                            Name = "ViewAccess"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.ControlLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ControlLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(8598),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(8620),
                            Name = "All"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(9065),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(9085),
                            Name = "Owner"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_ControlLevel")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JopTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_ControlLevel");

                    b.ToTable("SystemUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(879),
                            CreatedBy = "seed@app.com",
                            Email = "Developer@App.com",
                            Fk_ControlLevel = 1,
                            FullName = "Developer",
                            IsActive = true,
                            JopTitle = "Developer",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(901),
                            Password = "szrd7589xt"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.SystemUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_AccessLevel")
                        .HasColumnType("int");

                    b.Property<int>("Fk_SystemUser")
                        .HasColumnType("int");

                    b.Property<int>("Fk_SystemView")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fk_AccessLevel");

                    b.HasIndex("Fk_SystemUser");

                    b.HasIndex("Fk_SystemView");

                    b.ToTable("SystemUserPermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(6501),
                            CreatedBy = "seed@app.com",
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 1,
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(6598)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(8098),
                            CreatedBy = "seed@app.com",
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 2,
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(8126)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(8177),
                            CreatedBy = "seed@app.com",
                            Fk_AccessLevel = 1,
                            Fk_SystemUser = 1,
                            Fk_SystemView = 3,
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 36, DateTimeKind.Unspecified).AddTicks(8183)
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.SystemView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemView");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(9708),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(9729),
                            Name = "Home"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(156),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(175),
                            Name = "SystemView"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(191),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 35, DateTimeKind.Unspecified).AddTicks(197),
                            Name = "SystemUser"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(5167),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(5242),
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(6053),
                            CreatedBy = "seed@app.com",
                            LastModifiedAt = new DateTime(2020, 5, 19, 4, 37, 56, 34, DateTimeKind.Unspecified).AddTicks(6085),
                            Name = "Arabic"
                        });
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticMessageLang", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.Language", "Language")
                        .WithMany("AppStaticMessageLangs")
                        .HasForeignKey("Fk_Language")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.AppStaticMessage", "Source")
                        .WithMany("AppStaticWordLangs")
                        .HasForeignKey("Fk_Source")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.AppStaticWordLang", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.Language", "Language")
                        .WithMany("AppStaticWordLangs")
                        .HasForeignKey("Fk_Language")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.AppStaticWord", "Source")
                        .WithMany("AppStaticWordLangs")
                        .HasForeignKey("Fk_Source")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.Group", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AppModel.User", "Creator")
                        .WithMany("Groups")
                        .HasForeignKey("Fk_Creator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.GroupMember", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AppModel.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("Fk_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.MemberType", "MemberType")
                        .WithMany("GroupMembers")
                        .HasForeignKey("Fk_MemberType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("Fk_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.GroupMessage", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AppModel.Attachment", "Attachment")
                        .WithOne("GroupMessage")
                        .HasForeignKey("KSAVideoConference.Entity.AppModel.GroupMessage", "Fk_Attachment");

                    b.HasOne("KSAVideoConference.Entity.AppModel.Group", "Group")
                        .WithMany("GroupMessages")
                        .HasForeignKey("Fk_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.User", "User")
                        .WithMany("GroupMessages")
                        .HasForeignKey("Fk_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.User", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.Language", "Language")
                        .WithMany("Users")
                        .HasForeignKey("Fk_Language")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AppModel.UserContact", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AppModel.User", "Contact")
                        .WithMany("MeInUserContacts")
                        .HasForeignKey("Fk_Contact")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AppModel.User", "User")
                        .WithMany("MyUserContacts")
                        .HasForeignKey("Fk_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.SystemUser", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AuthModel.ControlLevel", "ControlLevel")
                        .WithMany("SystemUsers")
                        .HasForeignKey("Fk_ControlLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KSAVideoConference.Entity.AuthModel.SystemUserPermission", b =>
                {
                    b.HasOne("KSAVideoConference.Entity.AuthModel.AccessLevel", "AccessLevel")
                        .WithMany("SystemUserPermissions")
                        .HasForeignKey("Fk_AccessLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AuthModel.SystemUser", "SystemUser")
                        .WithMany("SystemUserPermissions")
                        .HasForeignKey("Fk_SystemUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KSAVideoConference.Entity.AuthModel.SystemView", "SystemView")
                        .WithMany("SystemUserPermissions")
                        .HasForeignKey("Fk_SystemView")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
